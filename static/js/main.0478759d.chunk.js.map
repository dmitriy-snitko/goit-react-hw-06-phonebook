{"version":3,"sources":["redux/contacts/contacts-actions.js","redux/contacts/contacts-reducer.js","redux/store.js","components/ContactForm/ContactForm.styles.jsx","components/ContactForm/ContactForm.jsx","components/ContactsList/ContactsList.styles.jsx","redux/contacts/contacts-selectors.js","components/ContactsList/ContactsList.jsx","components/Filter/Filter.styles.jsx","components/Filter/Filter.jsx","App.styles.jsx","App.jsx","index.js"],"names":["addContact","createAction","name","number","payload","id","shortid","generate","deleteContact","changeFilter","meta","debounce","time","items","createReducer","state","onAddContact","filter","_","normalizedName","toLowerCase","find","el","alert","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","createDebounce","contactsPersistConfig","key","storage","blacklist","store","configureStore","reducer","contacts","persistReducer","contactsReducer","persistor","persistStore","Form","styled","form","Title","h3","SubmitBtn","button","ContactForm","useState","setName","setNumber","dispatch","useDispatch","handleChange","e","currentTarget","value","onSubmit","preventDefault","type","pattern","title","autoComplete","onChange","required","List","ul","Item","li","getFiltredContacts","getItems","getFilter","contact","includes","ContactsList","useSelector","length","map","cont","onClick","Label","label","p","Filter","Container","div","h2","App","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.0478759d.chunk.js","sourcesContent":["import { createAction } from '@reduxjs/toolkit';\r\nimport shortid from 'shortid';\r\n\r\nexport const addContact = createAction('contacts/add', (name, number) => ({\r\n  payload: {\r\n    id: shortid.generate(),\r\n    name,\r\n    number,\r\n  },\r\n}));\r\n\r\nexport const deleteContact = createAction('contacts/delete');\r\n\r\nexport const changeFilter = createAction('contacts/changeFilter', payload => ({\r\n  payload,\r\n  meta: {\r\n    debounce: {\r\n      time: 300,\r\n    }\r\n  }\r\n}));\r\n","import { combineReducers } from \"redux\";\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport {addContact, deleteContact, changeFilter} from '../contacts/contacts-actions';\r\n\r\nconst items = createReducer([], {\r\n  [addContact]: (state, { payload }) => onAddContact(state, payload),\r\n\r\n  [deleteContact]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nconst onAddContact = (state, payload) => {\r\n  const normalizedName = payload.name.toLowerCase();\r\n  const isAlreadyinContacts = state.find(el => el.name.toLowerCase() === normalizedName);\r\n\r\n  if (isAlreadyinContacts) {\r\n    alert(`${payload.name} is already in contacts!`);\r\n    return state;\r\n  };\r\n\r\n  const newContact = {\r\n    id: payload.id,\r\n    name: payload.name,\r\n    number: payload.number\r\n  };\r\n\r\n  return [\r\n    newContact,\r\n    ...state,\r\n  ];\r\n};\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n});","import {\r\n  configureStore,\r\n  getDefaultMiddleware,\r\n} from '@reduxjs/toolkit';\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport contactsReducer from \"./contacts/contacts-reducer\";\r\nimport createDebounce from 'redux-debounced';\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  createDebounce()\r\n];\r\n\r\nconst contactsPersistConfig = {\r\n  key: 'contacts',\r\n  storage,\r\n  blacklist: ['filter'],\r\n};\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: persistReducer(contactsPersistConfig, contactsReducer),\r\n  },\r\n  middleware,\r\n  // devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nconst persistor = persistStore(store);\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default { store, persistor };","import styled from \"@emotion/styled\";\n\nexport const Form = styled.form`\nwidth: 400px;\npadding: 10px;\nmargin-bottom: 30px;\ndisplay: grid;\ngrid-template-columns: 1fr;\ngap: 25px;\nborder: 1px solid black;\n`\n\nexport const Title = styled.h3`\nmargin-bottom: 7px;\n`\n\nexport const SubmitBtn = styled.button`\nwidth:172px;\n`","import { useDispatch } from 'react-redux';\nimport { useState } from 'react';\nimport { Form, SubmitBtn, Title } from './ContactForm.styles';\nimport { addContact } from '../../redux/contacts/contacts-actions';\n\nfunction ContactForm() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const dispatch = useDispatch();\n\n  const handleChange = e => {\n    const { name, value } = e.currentTarget;\n\n    switch (name) {\n      case \"name\":\n        setName(value);\n        break;\n\n      case \"number\":\n        setNumber(value);\n        break;\n\n      default: return;\n    };\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    dispatch(addContact(name, number));\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <label>\n        <Title>Name: </Title>\n        <input\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          autoComplete=\"off\"\n          onChange={handleChange}\n          required\n        />\n      </label>\n\n      <label>\n        <Title>Number: </Title>\n        <input\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          autoComplete=\"off\"\n          onChange={handleChange}\n          required\n        />\n      </label>\n      <SubmitBtn type=\"submit\">Add Contact</SubmitBtn>\n    </Form>\n  )\n};\n\nexport default ContactForm;\n","import styled from \"@emotion/styled\";\n\nexport const List = styled.ul`\nwidth: 400px;\nlist-style: none;\n`\nexport const Item = styled.li`\ndisplay: flex;\njustify-content: space-between;\npadding-left: 15px;\n\n  &:not(:last-child) {\n    margin-bottom: 10px;\n  }\n`","export const getItems = state => state.contacts.items;\r\nexport const getFilter = state => state.contacts.filter;\r\n\r\nexport const getFiltredContacts = state => {\r\n  const items = getItems(state);\r\n  const filter = getFilter(state);\r\n\r\n  return items.filter(contact =>\r\n    contact.name.toLowerCase().includes(filter.toLowerCase()));\r\n};\r\n","import React from 'react';\nimport { List, Item } from './ContactsList.styles';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { deleteContact } from '../../redux/contacts/contacts-actions';\nimport { getFiltredContacts } from '../../redux/contacts/contacts-selectors';\n\nconst ContactsList = () => {\n  const items = useSelector(getFiltredContacts);\n  const dispatch = useDispatch();\n\n  return (\n    <List>\n      {!items.length\n        ? <p>Contact list is empty for now</p>\n        : items.map(cont => {\n          return (\n            <Item key={cont.id}>\n              <p>{`${cont.name}: ${cont.number}`}</p>\n              <button onClick={() => dispatch(deleteContact(cont.id))}>Delete</button>\n            </Item>\n          )\n        })\n      }\n    </List>\n  );\n};\n\nexport default ContactsList;\n","import styled from \"@emotion/styled\";\n\nexport const Label = styled.label`\ndisplay: block;\nmargin-bottom: 15px;\n`\n\nexport const Title = styled.p`\nfont-weight: 500;\nmargin-bottom: 10px;\n`","import React from 'react'\nimport { useDispatch } from 'react-redux';\nimport { changeFilter } from '../../redux/contacts/contacts-actions'\nimport { Label, Title } from '../Filter/Filter.styles';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n\n  return (\n    <Label>\n      <Title>Find contacts by name:</Title>\n      <input\n        type=\"text\"\n        onChange={(e) => dispatch(changeFilter(e.currentTarget.value))}\n      />\n    </Label>\n  );\n};\n\nexport default (Filter);\n","import styled from \"@emotion/styled\";\n\nexport const Container = styled.div`\npadding: 25px;\n`\nexport const Title = styled.h2`\nmargin-bottom: 15px;\n`","import ContactForm from './components/ContactForm';\nimport ContactsList from './components/ContactsList';\nimport Filter from './components/Filter';\nimport { Container, Title } from './App.styles.jsx';\n\nfunction App() {\n    return (\n      <Container>\n        <Title>Phonebook</Title>\n        <ContactForm />\n        <Filter />\n\n        <Title>Contacts</Title>\n        <ContactsList />\n    </Container>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react'\nimport store from './redux/store';\nimport './index.css';\nimport App from './App.jsx';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}