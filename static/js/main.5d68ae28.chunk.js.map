{"version":3,"sources":["redux/contacts/contacts-actions.js","redux/contacts/contacts-reducer.js","redux/store.js","components/ContactForm/ContactForm.styles.jsx","components/ContactForm/ContactForm.jsx","components/ContactsList/ContactsList.styles.jsx","components/ContactsList/ContactsList.jsx","components/Filter/Filter.styles.jsx","components/Filter/Filter.jsx","App.styles.jsx","App.jsx","index.js"],"names":["addContact","createAction","name","number","payload","id","shortid","generate","deleteContact","changeFilter","items","createReducer","actions","state","filter","_","normalizedName","toLowerCase","find","el","alert","combineReducers","contactsPersistConfig","key","storage","blacklist","store","configureStore","reducer","contacts","persistReducer","contactsReducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","devTools","process","persistor","persistStore","Form","styled","form","Title","h3","SubmitBtn","button","connect","dispatch","onSubmit","useState","setName","setNumber","handleChange","e","currentTarget","value","reset","preventDefault","type","pattern","title","autoComplete","onChange","required","List","ul","Item","li","onDeleteContact","normalizedFilter","cont","includes","getFiltredContacts","map","onClick","Label","label","p","onChangeFilter","Container","div","h2","filterValue","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.5d68ae28.chunk.js","sourcesContent":["import { createAction } from '@reduxjs/toolkit';\r\nimport shortid from 'shortid';\r\n\r\nexport const addContact = createAction('contacts/add', (name, number) => ({\r\n  payload: {\r\n    id: shortid.generate(),\r\n    name,\r\n    number,\r\n  },\r\n}));\r\n\r\nexport const deleteContact = createAction('contacts/delete');\r\n\r\nexport const changeFilter = createAction('contacts/changeFilter');\r\n","import { combineReducers } from \"redux\";\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport * as actions from '../contacts/contacts-actions';\r\n\r\nconst items = createReducer([], {\r\n  [actions.addContact]: (state, { payload }) => addContact(state, payload),\r\n\r\n  [actions.deleteContact]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [actions.changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nconst addContact = (state, payload) => {\r\n  const normalizedName = payload.name.toLowerCase();\r\n  const isAlreadyinContacts = state.find(el => el.name.toLowerCase() === normalizedName);\r\n\r\n  if (isAlreadyinContacts) {\r\n    alert(`${payload.name} is already in contacts!`);\r\n    return state;\r\n  };\r\n\r\n  const newContact = {\r\n    id: payload.id,\r\n    name: payload.name,\r\n    number: payload.number\r\n  };\r\n\r\n  return [\r\n    newContact,\r\n    ...state,\r\n  ];\r\n};\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n});","import {\r\n  configureStore,\r\n  getDefaultMiddleware,\r\n} from '@reduxjs/toolkit';\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport contactsReducer from \"./contacts/contacts-reducer\";\r\n\r\nconst contactsPersistConfig = {\r\n  key: 'contacts',\r\n  storage,\r\n  blacklist: ['filter'],\r\n};\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: persistReducer(contactsPersistConfig, contactsReducer),\r\n  },\r\n   middleware: getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nconst persistor = persistStore(store);\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default { store, persistor };","import styled from \"@emotion/styled\";\n\nexport const Form = styled.form`\nwidth: 400px;\npadding: 10px;\nmargin-bottom: 30px;\ndisplay: grid;\ngrid-template-columns: 1fr;\ngap: 25px;\nborder: 1px solid black;\n`\n\nexport const Title = styled.h3`\nmargin-bottom: 7px;\n`\n\nexport const SubmitBtn = styled.button`\nwidth:172px;\n`","import { connect } from 'react-redux';\nimport { useState } from 'react';\nimport { Form, SubmitBtn, Title } from './ContactForm.styles';\nimport { addContact } from '../../redux/contacts/contacts-actions';\n\nimport PropTypes from 'prop-types';\n\nfunction ContactForm({onSubmit}) {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleChange = e => {\n    const { name, value } = e.currentTarget;\n\n    switch (name) {\n      case \"name\":\n        setName(value);\n        break;\n\n      case \"number\":\n        setNumber(value);\n        break;\n\n      default: return;\n    };\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    onSubmit(name, number);\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  }\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <label>\n        <Title>Name: </Title>\n        <input\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          autoComplete=\"off\"\n          onChange={handleChange}\n          required\n        />\n      </label>\n\n      <label>\n        <Title>Number: </Title>\n        <input\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          autoComplete=\"off\"\n          onChange={handleChange}\n          required\n        />\n      </label>\n      <SubmitBtn type=\"submit\">Add Contact</SubmitBtn>\n    </Form>\n  )\n};\n\nconst mapDispatchToProps = dispatch => ({\n  onSubmit: (name, number) => dispatch(addContact(name, number)),\n});\n\n\nexport default connect(null, mapDispatchToProps)(ContactForm);\n\nContactForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import styled from \"@emotion/styled\";\n\nexport const List = styled.ul`\nwidth: 400px;\nlist-style: none;\n`\nexport const Item = styled.li`\ndisplay: flex;\njustify-content: space-between;\npadding-left: 15px;\n\n  &:not(:last-child) {\n    margin-bottom: 10px;\n  }\n`","import React from 'react';\nimport { connect } from 'react-redux';\nimport { deleteContact } from '../../redux/contacts/contacts-actions';\nimport { List, Item } from '../ContactsList/ContactsList.styles';\n\nconst ContactsList = ({items, filter, onDeleteContact }) => {\n\n  const getFiltredContacts = () => {\n    const normalizedFilter = filter.toLowerCase();\n\n    return items.filter(cont =>\n      cont.name.toLowerCase().includes(normalizedFilter));\n  };\n\n  return (\n    <List>\n      {getFiltredContacts().map(cont => {\n        return (\n          <Item key={cont.id}>\n            <p>{`${cont.name}: ${cont.number}`}</p>\n            <button onClick={() => onDeleteContact(cont.id)}>Delete</button>\n          </Item>\n        )\n      })}\n    </List>\n  )\n};\n\nconst mapStateToProps = state => ({\n  items: state.contacts.items,\n  filter: state.contacts.filter\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onDeleteContact: id => dispatch(deleteContact(id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactsList);\n","import styled from \"@emotion/styled\";\n\nexport const Label = styled.label`\ndisplay: block;\nmargin-bottom: 15px;\n`\n\nexport const Title = styled.p`\nfont-weight: 500;\nmargin-bottom: 10px;\n`","import React from 'react'\nimport { connect } from 'react-redux';\nimport {changeFilter} from '../../redux/contacts/contacts-actions'\nimport { Label, Title } from '../Filter/Filter.styles';\n\nconst Filter = ({value, onChangeFilter }) => {\n  return (\n    <Label>\n      <Title>Find contacts by name:</Title>\n      <input type=\"text\" value={value} onChange={onChangeFilter} />\n    </Label>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  value: state.contacts.filter,\n})\n\nconst mapDispatchToProps = dispatch => ({\n  onChangeFilter: (e) => dispatch(changeFilter(e.currentTarget.value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import styled from \"@emotion/styled\";\n\nexport const Container = styled.div`\npadding: 25px;\n`\nexport const Title = styled.h2`\nmargin-bottom: 15px;\n`","import { connect } from 'react-redux';\nimport * as actions from './redux/contacts/contacts-actions';\nimport ContactForm from './components/ContactForm/ContactForm';\nimport ContactsList from './components/ContactsList/ContactsList';\nimport Filter from './components/Filter/Filter';\nimport { Container, Title } from './App.styles.jsx';\n\nfunction App() {\n    return (\n      <Container>\n        <Title>Phonebook</Title>\n        <ContactForm />\n        <Filter />\n\n        <Title>Contacts</Title>\n        <ContactsList />\n    </Container>\n  );\n};\n\nconst mapStateToProps = state => ({\n  items: state.contacts.items,\n})\n\nconst mapDispatchToProps = dispatch => ({\n  changeFilter: (filterValue) => dispatch(actions.changeFilter(filterValue)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react'\nimport store from './redux/store';\nimport './index.css';\nimport App from './App.jsx';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}